/*
5강.		Dependency를 직접 Injection하기
6강.		스프링 DI 설정을 위해 이클립스 플러그인 설치하기
7강.		스프링 DI 지시서 작성하기(Spring Bean Configuration)
8강.		스프링 IoC 컨테이너 사용하기(ApplicationContext 이용하기)
9강.		값 형식 DI
10강.	생성자 DI
*/
package spring_practice.di;

import spring_practice.di.entity.Exam;
import spring_practice.di.entity.NewlecExam;
import spring_practice.di.ui.ExamConsol;
import spring_practice.di.ui.GridExamConsole;

public class Program {

	public static void main(String[] args) {
		Exam exam = new NewlecExam();	//	부품 생성 (객체 생성)
										//	Exam : interface
										//	NewlecExam : 구현체
		ExamConsol console = new GridExamConsole();	//	부품 생성 (객체 생성)
													//	Exam : interface
													//	NewlecExam : 구현체
	//	ExamConsol console = new GredExamConsole(exam);	//	부품 조립 결합
														//	1. 생성자로 결합
		console.setExam(exam);	//	부품 조립 결합
								//	2. setter로 결합
		console.print();
	}

}
